id: 02f4e032-64bf-4e69-b429-fc03015faed8
name: Blast Local Column Search
serviceName: BlastLocalColumnSearch
executorId: Glysade.CPythonDataFxn
serviceUri: glysade.python
version: 1.0.0
inputFields:
  - control:
      id: sequenceColumn
      label: Select sequence column
      type: columnselect
      filters:
        - dataType: string
          contentType: chemical/x-sequence
        - dataType: binary
          contentType: chemical/x-genbank
      validationRules:
        - type: required
          message: Must select column of sequences
    request:
      id: sequenceColumn
      dataType: string
      selectorType: column
  - control:
      id: method
      label: Select method
      type: select
      options:
        - text: "BLASTP: protein(q)-protein(d)"
          value: BLASTP
        - text: "BLASTN: nucleotide(q)-nucleotide(d)"
          value: BLASTN
        - text: "BLASTX: nucleotide(q)+translation-protein(d)"
          value: BLASTX
        - text: "TBLASTN: protein(q)-nucleotide(d)+translation"
          value: TBLASTN
        - text: "TBLASTX: nucleotide(q)+translation-nucleotide(d)+translation"
          value: TBLASTX
      validationRules:
        - type: required
    request:
      id: method
      dataType: string
      data: BLASTP
  - control:
      id: databaseName
      label: Select database
      type: select
      options:
        - text: Human NCBI NR
          value: human_nr
        - text: Human Uniprot SwissProt
          value: up_sp_human
        - text: Human Uniprot Trembl
          value: up_tbl_human
        - text: Human NCBI NT
          value: human_nt
        - text: Human EBI ENA
          value: ena_cd_human
        - text: Mouse NCBI NR
          value: mouse_nr
        - text: Mouse NCBI NT
          value: mouse_nt
        - text: Rat NCBI NR
          value: rat_nr
        - text: Rat NCBI NT
          value: rat_nt
        - text: Human IG Germline (Proteins)
          value: human_IG_germline
      validationRules:
        - type: required
    request:
      id: databaseName
      dataType: string
  - control:
      id: maxHits
      label: Max hits
      type: text
      validationRules:
        - type: required
          message: Must enter a value between 1 and 5000
        - type: range
          min: !!int 1
          max: !!int 5000
          message: Max hits must be a value between 1 and 5000
    request:
      id: maxHits
      dataType: integer
      data: !!int 100
  - control:
      id: blastDbPath
      label: Directory containing BLAST databases
      type: file
      mode: path
      pathType: folder
      validationRules:
      - type: required
        message: ''
    request:
      id: blastDbPath
      dataType: string
      data: C:\db\ncbi
description: Performs a BLAST search of user selected databases using a query entered as text
category: python-local.bio.sequence
comments: ""
ironPython: |
    ############################################
    #  Copyright 2019 Glysade LLC             #
    ############################################

    import sys,clr
    from Spotfire.Dxp.Data import DataTable, DataManager
    from Spotfire.Dxp.Application import PanelTypeIdentifiers
    from Spotfire.Dxp.Application import Panel
    import Spotfire.Dxp.Application.PanelCollection

    from System import AppDomain
    for asm in AppDomain.CurrentDomain.GetAssemblies():
        if asm.GetName().Name == 'Charts':
            clr.AddReference(asm.FullName)

    from Charts import ChartsModel
    model_type = ChartsModel

    #tableId pass in args
    dataTable = None

    for table in Document.Data.Tables:
        if str(table.Id) == tableId:
            dataTable = table

    if not dataTable:
        raise Exception('target table not found')

    page = Document.Pages.AddNew('Blast (local) column query Results')
    panelsToHide = [PanelTypeIdentifiers.DataPanel, PanelTypeIdentifiers.DetailsOnDemandPanel]

    for panel in page.Panels:
        if panel.TypeId in panelsToHide:
            if panel.Visible:
                panel.Visible = False
            

    filteringScheme = Document.FilteringSchemes[0]
    page.FilterPanel.FilteringSchemeReference = filteringScheme

    tableVis = page.Visuals.AddNew[model_type]()
    tableVis.SetKeyValue('visualization','table-visualization')
    tableVis.DataTable = dataTable
    tableVis.ConfigureColumns()
    tableVis.Marking = Document.Data.Markings.DefaultMarkingReference

    tableVis.SetActiveVisual()
    page.AutoConfigure()
